service: defender-as-code-test-project
configValidationMode: error
frameworkVersion: "3"
useDotenv: true

provider:
  name: defender
  stage: ${opt:stage, 'dev'}
  stackName: mystack
  ssot: false

defender:
  key: ${env:DEFENDER_API_KEY}
  secret: ${env:DEFENDER_API_SECRET}

resources:
  actions:
    detect-new-markets:
      name: "Detect New V3 Markets"
      path: "./dist/actions/detect-new-markets"
      relayer: ${self:resources.relayers.main-relayer}
      trigger:
        type: sentinel
      paused: false
      environment-variables:
        DEFENDER_API_KEY: ${env:DEFENDER_API_KEY}
        DEFENDER_API_SECRET: ${env:DEFENDER_API_SECRET}
        PHALCON_RPC_URL: ${env:PHALCON_RPC_URL}
        PHALCON_BLOCK_EXPLORER_URL: ${env:PHALCON_BLOCK_EXPLORER_URL}
        ENS_RESOLVER_ADDRESS: ${env:ENS_RESOLVER_ADDRESS}
        NOTIFICATION_CHANNEL_ALIAS: ${env:NOTIFICATION_CHANNEL_ALIAS}
        ENS_COMPOUND_DOMAIN: ${env:ENS_COMPOUND_DOMAIN}
        ENS_COMPOUND_KEY: ${env:ENS_COMPOUND_KEY}
        ENS_COMPOUND_NODE: ${env:ENS_COMPOUND_NODE}
        ALCHEMY_RPC_URL: ${env:ALCHEMY_RPC_URL}
        MONITOR_CHAIN_ID: ${env:MONITOR_CHAIN_ID}
    push-new-markets:
      name: "Push New V3 Markets"
      path: "./dist/actions/push-new-markets"
      relayer: ${self:resources.relayers.main-relayer}
      trigger:
        type: sentinel
      paused: false
      environment-variables:
        DEFENDER_API_KEY: ${env:DEFENDER_API_KEY}
        DEFENDER_API_SECRET: ${env:DEFENDER_API_SECRET}
        PHALCON_RPC_URL: ${env:PHALCON_RPC_URL}
        PHALCON_BLOCK_EXPLORER_URL: ${env:PHALCON_BLOCK_EXPLORER_URL}
        ENS_RESOLVER_ADDRESS: ${env:ENS_RESOLVER_ADDRESS}
        NOTIFICATION_CHANNEL_ALIAS: ${env:NOTIFICATION_CHANNEL_ALIAS}
        ENS_COMPOUND_DOMAIN: ${env:ENS_COMPOUND_DOMAIN}
        ENS_COMPOUND_KEY: ${env:ENS_COMPOUND_KEY}
        ENS_COMPOUND_NODE: ${env:ENS_COMPOUND_NODE}
        ALCHEMY_RPC_URL: ${env:ALCHEMY_RPC_URL}
        MONITOR_CHAIN_ID: ${env:MONITOR_CHAIN_ID}
  policies: {}
  contracts:
    ens-resolver:
      name: ENS Resolver
      address: ${env:ENS_RESOLVER_ADDRESS}
      network: forked-mainnet
      abi: ${file(./src/common/abis/ens-resolver.json)}
    v3-commet:
      name: Compound V3 Commet
      address: ${env:V3_COMPOUND_ADDRESS}
      network: forked-mainnet
      abi: ${file(./src/common/abis/ens-resolver.json)}
  relayers:
    main-relayer:
      name: "Main Relayer"
      network: forked-mainnet
      min-balance: 1.0
      policy: {}
      api-keys:
        - "key1"
  notifications:
    fede:
      type: email
      name: ${env:NOTIFICATION_CHANNEL_ALIAS}
      config:
        emails:
          - fcaffaro@itba.edu.ar
      paused: false

  monitors:
    forked-mainnet-ens-resolver:
      name: ENSResolverMonitor
      type: "BLOCK"
      network: forked-mainnet
      contracts:
        - ${self:resources.contracts.ens-resolver}
      abi: ${file(./src/common/abis/ens-resolver.json)}
      skip-abi-validation: false
      paused: false
      action-condition: ${self:resources.actions.detect-new-markets}
      action-trigger: ${self:resources.actions.push-new-markets}
      confirm-level: 1
      notify-config:
        timeout: 0
        message: "Message"
        message-subject: "Defender Monitor: forked-mainnet-ens-resolver: triggered"
        channels:
          - ${self:resources.notifications.fede}
      conditions:
        event:
          - expression: >-
              node=="0x7dcf87198fd673716e5a32b206d9379c4fcbad8875073f52bfd0656759bf89ed"
              AND key=="v3-official-markets"
            signature: TextChanged(bytes32,string,string)
  forked-networks:
    forked-mainnet:
      name: forked-mainnet
      supported-network: mainnet
      rpc-url: ${env:PHALCON_RPC_URL}
      block-explorer-url: ${env:PHALCON_BLOCK_EXPLORER_URL}
  private-networks: {}
  block-explorer-api-keys: {}

plugins:
  - "@openzeppelin/defender-as-code"
